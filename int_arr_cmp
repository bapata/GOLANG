package main

import (
  "fmt"
)

// [0,1] cmp [1,0] returns -1
// [1,1] cmp [1,0] returns 1
// [1,1,9] cmp [1,1] returns 1
// [1,1] cmp [1,1] returns 0

func get_bool_res(m,n int) int {
  res := m-n
  if res==0 {
    return res
  } else if res<0 {
    return -1
  } else {
    return 1
  }
}

func min_int(x,y int) int {
  if x<y {
    return x
  } else {
    return y
  }
}


func cmp_int_arr(a,b []int) int {
  ii:=0
  len_a := len(a)
  len_b := len(b)
  minab := min_int(len_a,len_b)

  for ;ii<minab; {
    if a[ii]!=b[ii] {
      break
    } else {
      ii = ii+1
    }
  }
  if ii<minab {
    return a[ii]-b[ii]
  } else if ii==minab {
    if len_a >minab {
      return 1
    } else if (len_b > minab) {
      return -1
    } else {
      return a[minab-1]-b[minab-1]
    }
  }
  return 9999
}

func main() {
  p := []int{1,9,2,3,40,1}
  q := []int{1,9,2,3,40,2}
  // p-q
  res := cmp_int_arr(p,q)
  if res>0 {
    fmt.Println(p)
    fmt.Println("is greater")
  } else if res<0 {
    fmt.Println(q)
    fmt.Println("is greater")
  } else {
    fmt.Println("both are equal")
  }
}
